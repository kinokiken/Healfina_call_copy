package controllers

import (
	"Healfina_call/database"
	"Healfina_call/models"
	"encoding/json"
	"fmt"
	"log"

	beego "github.com/beego/beego/v2/server/web"
)

type DialogController struct {
	beego.Controller
}

// AddDialog
// @Summary –î–æ–±–∞–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// @Description –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ —Å –∑–∞—Ä–∞–Ω–µ–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–º –ø–ª–∞–Ω–æ–º –æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º –ø–ª–∞–Ω–æ–º.
// @Tags dialog
// @Accept json
// @Produce json
// @Success 200 {object} models.AddDialogResponse "–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥"
// @Failure 400 {string} string "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å"
// @Failure 500 {string} string "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
// @router /dialog [post]
func (c *DialogController) AddDialog() {
	user_id := AppContext.UserID

	var plan string

	latestSummary, err := database.GetLatestDialogSummary(user_id)
	if err != nil {
		log.Printf("Error fetching latest summary: %v", err)
		c.Ctx.Output.SetStatus(500)
		c.Data["json"] = models.ErrorResponse{Message: fmt.Sprintf("Failed to get latest summary: %v", err)}
		c.ServeJSON()
		return
	}

	if latestSummary == "" {
		plan = `–ü–ª–∞–Ω –æ–±—â–µ–Ω–∏—è:

		1. –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ: –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "–†–∞–¥–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –Ω–∞ –Ω–∞—à–µ–π –ø–µ—Ä–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üòä –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?". –í —Å–ª–µ–¥—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —É–∑–Ω–∞–π –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ, —Ç–∞–∫—É—é –∫–∞–∫ –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, –µ–≥–æ —É–≤–ª–µ—á–µ–Ω–∏—è. –ó–∞—Ç–µ–º, —É–∑–Ω–∞–π—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è –∫–ª–∏–µ–Ω—Ç.
		2. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ö–ü–¢ –∏ —Å—Ö–µ–º–∞—Ç–µ—Ä–∞–ø–∏–∏: –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —É–∑–Ω–∞–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞, –æ–±—ä—è—Å–Ω–∏—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ –ö–ü–¢ –∏ —Å—Ö–µ–º–∞—Ç–µ—Ä–∞–ø–∏—è, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —á–µ–≥–æ –∫–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –æ–∂–∏–¥–∞—Ç—å –æ—Ç —Ç–µ—Ä–∞–ø–∏–∏. –ö—Ä–∞—Ç–∫–æ –æ–±—ä—è—Å–Ω–∏—Ç–µ, —á—Ç–æ —Ü–µ–ª—å —Ç–µ—Ä–∞–ø–∏–∏ ‚Äî –ø–æ–º–æ—á—å –∫–ª–∏–µ–Ω—Ç–∞–º –ø–æ–Ω—è—Ç—å –∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã. –¢–∞–∫–∂–µ –æ–±—Å—É–¥–∏—Ç–µ –≤–∞–∂–Ω–æ—Å—Ç—å –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏ —Ç–µ—Ä–∞–ø–∏–∏. 
		3. –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–±—É–¥–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–≤–æ–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö, —Å–∏–º–ø—Ç–æ–º–∞—Ö –∏ —Ü–µ–ª—è—Ö –¥–ª—è —Ç–µ—Ä–∞–ø–∏–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–Ω—è—Ç—å –º–æ–¥–µ–ª–∏ –º—ã—à–ª–µ–Ω–∏—è, –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏ —ç–º–æ—Ü–∏–π –∫–ª–∏–µ–Ω—Ç–∞. –ü–æ–º–Ω–∏—Ç–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É —Å–≤–æ–±–æ–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –∏ –∞–∫—Ç–∏–≤–Ω–æ —Å–ª—É—à–∞—Ç—å.
		4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π: –ö–∞–∫ —Ç–æ–ª—å–∫–æ —É –≤–∞—Å –±—É–¥–µ—Ç –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∫–ª–∏–µ–Ω—Ç–∞, —Ä–∞–±–æ—Ç–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–∏ –ª–µ—á–µ–Ω–∏—è. –≠—Ç–∏ —Ü–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏, –∏–∑–º–µ—Ä–∏–º—ã–º–∏, –¥–æ—Å—Ç–∏–∂–∏–º—ã–º–∏, –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (SMART). –¢–∞–∫–∂–µ –æ–±—Å—É–¥–∏—Ç–µ, –∫–∞–∫ –±—É–¥–µ—Ç –∏–∑–º–µ—Ä—è—Ç—å—Å—è –ø—Ä–æ–≥—Ä–µ—Å—Å.
		5. –ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è: –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–π –∫–æ–Ω—Ü–µ–ø—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–∞. –≠—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –º—ã—Å–ª—è–º–∏, —á—É–≤—Å—Ç–≤–∞–º–∏ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —ç—Ç–æ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å–µ—Å—Å–∏–∏, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∫–ª—é—á–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞, –µ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º—ã —Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–∏–µ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã. –¢–∞–∫–∂–µ –æ–±—Å—É–¥–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ—à–ª—ã–µ –æ–ø—ã—Ç—ã –∏ —Å–µ–º–µ–π–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
		6. –í–≤–µ–¥–µ–Ω–∏–µ –≤ –Ω–∞–≤—ã–∫–∏ –ö–ü–¢: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫ –ö–ü–¢, —Ç–∞–∫–æ–π –∫–∞–∫ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–∞—è –ø–µ—Ä–µ—Å—Ç—Ä–æ–π–∫–∞ –∏–ª–∏ –º–µ–¥–∏—Ç–∞—Ü–∏—è. –î–∞–π—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫ –æ–Ω–∏ –æ—Ç—Ä–µ–∞–≥–∏—Ä—É—é—Ç.
		7. –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ: –ó–∞–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Å—Ç—ã–º –∑–∞–¥–∞–Ω–∏–µ–º –ø–æ —Å–∞–º–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º –º—ã—Å–ª–µ–π –∏–ª–∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∞–º–æ—Å–æ–∑–Ω–∞–Ω–∏—è.
		8. –ö–æ–Ω–µ—Ü —Å–µ—Å—Å–∏–∏: –ó–∞–∫–æ–Ω—á–∏—Ç–µ —Å–µ—Å—Å–∏—é, –ø–æ–¥–≤–æ–¥—è –∏—Ç–æ–≥–∏ –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.`
	} else {
		plan = latestSummary
	}

	dialogID, err := database.AddDialog(user_id, plan)
	if err != nil {
		log.Printf("Error adding dialog: %v", err)
		c.Ctx.Output.SetStatus(500)
		c.Data["json"] = models.ErrorResponse{Message: fmt.Sprintf("Failed to add dialog: %v", err)}
		c.ServeJSON()
		return
	}

	response := models.AddDialogResponse{
		DialogID: dialogID,
	}
	c.Data["json"] = response
	c.ServeJSON()
}

// SetDialogMessages
// @Summary –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
// @Description –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–∏–∞–ª–æ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// @Tags dialog
// @Accept json
// @Produce json
// @Param body body models.SetMessagesRequest true "–°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
// @Success 200 {object} models.SetMessagesResponse "–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
// @Failure 400 {string} string "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞"
// @Failure 500 {string} string "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
// @router /dialog/messages [put]
func (c *DialogController) SetDialogMessages() {
	user_id := AppContext.UserID

	var request models.SetMessagesRequest

	body := c.Ctx.Input.RequestBody

	err := json.Unmarshal(body, &request)
	if err != nil {
		log.Printf("Error parsing request: %v", err)
		c.Ctx.Output.SetStatus(400)
		c.Data["json"] = models.ErrorResponse{Message: "Invalid request body"}
		c.ServeJSON()
		return
	}

	err = database.SetDialogMessages(user_id, request.Messages, &request.DialogID)
	if err != nil {
		log.Printf("Error setting dialog messages: %v", err)
		c.Ctx.Output.SetStatus(500)
		c.Data["json"] = models.ErrorResponse{Message: fmt.Sprintf("Failed to set dialog messages: %v", err)}
		c.ServeJSON()
		return
	}

	response := models.SetMessagesResponse{
		Status: "success",
	}
	c.Data["json"] = response
	c.ServeJSON()
}
